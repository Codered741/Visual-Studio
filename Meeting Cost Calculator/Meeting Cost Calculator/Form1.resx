<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="Timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAANcNAADXDQAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAACAAAAAvwAA
        ANkAAADzAAAA8wAAANkAAAC/AAAAgAAAADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFAAAADVAAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAANUAAABQAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4AAADEAAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAADEAAAAHgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA5AAAA6AAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/QAAANUAAAChAAAAoQAAANQAAAD8AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAADoAAAAOQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAANwAA
        APcAAAD/AAAA/wAAAP8AAAD/AAAAqAAAADwAAAALAAAAAAAAAAAAAAAAAAAAAAAAAAsAAAA7AAAAowAA
        AP8AAAD/AAAA/wAAAP8AAAD3AAAANwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        ABwAAADnAAAA/wAAAP8AAAD/AAAA6gAAAFMAAAAAAAAAAAAAAAAAAAAiAAAATQAAAEoAAAAbAAAAAAAA
        AAAAAAAAAAAATgAAAOcAAAD/AAAA/wAAAP8AAADnAAAAHAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        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
        AP8AAAB2AAAAAAAAAAAAAAAAAAAAAAAAAEEAAADsAAAA/wAAAP8AAAD/AAAA/wAAAOQAAAAhAAAAAAAA
        AAAAAAAAAAAAAAAAAG4AAAD/AAAA/wAAAP8AAAC9AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGwAA
        APMAAAD/AAAA/wAAAPgAAAApAAAAAAAAAAAAAAAAAAAAAAAAAA4AAACwAAAA/wAAAP8AAACNAAAACAAA
        AAAAAAAAAAAAAAAAAAAAAAAkAAAA9QAAAP8AAAD/AAAA/gAAADgAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAcQAAAP8AAAD/AAAA/wAAANYAAAAsAAAAAAAAAAAAAAAAAAAAAAAAAIUAAAD/AAAA/wAA
        AEgAAAAAAAAAAAAAAAAAAAAAAAAAKAAAANEAAAD/AAAA/wAAAP8AAAChAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAADAAAA0AAAAP8AAAD/AAAA/wAAAPgAAAB3AAAAAwAAAAAAAAAAAAAACAAA
        ABAAAAAQAAAABAAAAAAAAAAAAAAAAgAAAHEAAAD3AAAA/wAAAP8AAAD/AAAA2gAAABQAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAmAAAA2AAAAP8AAAD/AAAA/wAAAP8AAADGAAAAXAAA
        ACgAAAACAAAAAAAAAAAAAAACAAAAKAAAAFsAAADCAAAA/wAAAP8AAAD/AAAA/wAAAOUAAAAgAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOAAAAsAAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAPMAAADBAAAAwQAAAPIAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAAiwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAewAA
        AP0AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD8AAAAPgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAANwAAAJIAAADhAAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAADfAAAAkQAA
        AIMAAAD/AAAA/wAAAP8AAACoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAxAAAAgQAAAOoAAAD/AAAA/wAAAOUAAAB9AAAALwAA
        AAAAAAAAAAAAAAAAAJ0AAAD+AAAAiAAAAAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAuAAAAP8AAAD/AAAAqAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAEMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAyQAAANAAAADyAAAA/wAA
        AP8AAADvAAAA0AAAALwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD4AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA6AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        APgAAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAADoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA/+AH//+AAf/+AAB//AAAP/gDwB/wHDgP8Dw8D+B4Hgfg8A8HweAHg8Hg
        B4PB4YeDw+AHw8P4B8PD8A/Dw+A/w8Hhh4PB4AeDwOAPA+DwDwfgeB4H8Dw8D/AMMA/4AYAf/AAAP/4A
        AB//gAAf//AOH//8Pn//8A////AP///wD/8=
</value>
  </data>
</root>